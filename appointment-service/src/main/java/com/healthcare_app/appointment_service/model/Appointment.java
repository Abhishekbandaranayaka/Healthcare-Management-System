package com.healthcare_app.appointment_service.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.Future;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;

/**
 * Represents an appointment entity in the healthcare management system.
 * This entity is mapped to the "appointment_table" database table.
 * Uses JPA annotations for ORM and Jakarta Bean Validation annotations for input validation.
 * Author: Ima Herath
 */

@Entity //Specifies that the class is an entity and is mapped to a database table
@Table(name = "appointment_table") //Specifies the table name in the database
@Data //Lombok annotation to generate boilerplate code like getters, setters, etc.
@AllArgsConstructor //Lombok annotation to generate a constructor with all fields as parameters
@NoArgsConstructor //Lombok annotation to generate a no-argument constructor

public class Appointment {

    /**
     * The unique identifier for the appointment.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The ID of the patient associated with this appointment.
     * Mandatory field.
     */
    @NotNull(message = "Patient ID is mandatory")
    @Column(name = "patient_id")
    private Long patientId;

    /**
     * The ID of the doctor associated with this appointment.
     * Mandatory field.
     */
    @NotNull(message = "Doctor ID is mandatory")
    @Column(name = "doctor_id")
    private Long doctorId;

    /**
     * The date and time of the appointment.
     * Mandatory field that must be in the future.
     */
    @NotNull(message = "Appointment date is mandatory")
    @Future(message = "Appointment date must be in the future")
    @Column(name = "appointment_date")
    private LocalDateTime appointmentDate;

    /**
     * The status of the appointment (e.g., scheduled, completed, canceled).
     * Mandatory field.
     */
    @NotNull(message = "Status is mandatory")
    private String status;

    @Transient
    private String patientName;

    @Transient
    private String doctorName;

    @Transient
    private String specialization;
}
